#include <cmath>
#include <vector>

#include "ouster/os1_packet.h"

namespace ouster {
namespace OS1 {

extern const std::vector<double> beam_altitude_angles = {
    16.611,  16.084,  15.557,  15.029,  14.502,  13.975,  13.447,  12.920,
    12.393,  11.865,  11.338,  10.811,  10.283,  9.756,   9.229,   8.701,
    8.174,   7.646,   7.119,   6.592,   6.064,   5.537,   5.010,   4.482,
    3.955,   3.428,   2.900,   2.373,   1.846,   1.318,   0.791,   0.264,
    -0.264,  -0.791,  -1.318,  -1.846,  -2.373,  -2.900,  -3.428,  -3.955,
    -4.482,  -5.010,  -5.537,  -6.064,  -6.592,  -7.119,  -7.646,  -8.174,
    -8.701,  -9.229,  -9.756,  -10.283, -10.811, -11.338, -11.865, -12.393,
    -12.920, -13.447, -13.975, -14.502, -15.029, -15.557, -16.084, -16.611,
};

extern const std::vector<double> beam_azimuth_angles = {
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
    3.164, 1.055, -1.055, -3.164, 3.164, 1.055, -1.055, -3.164,
};

extern const std::vector<double> imu_to_sensor_transform = {
    1, 0, 0, 6.253, 0, 1, 0, -11.775, 0, 0, 1, 7.645, 0, 0, 0, 1};

extern const std::vector<double> lidar_to_sensor_transform = {
    -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 36.18, 0, 0, 0, 1};

const std::vector<int> OS0_offset_512 = {
    0,  11, 21, 31, 1,  11, 21, 31, 1,  11, 21, 30, 2,  11, 21, 30, 2,  11, 20,
    29, 2,  11, 20, 29, 3,  11, 20, 29, 3,  12, 20, 29, 3,  12, 20, 28, 3,  12,
    20, 28, 3,  12, 20, 28, 4,  12, 20, 28, 4,  12, 20, 28, 4,  12, 20, 28, 4,
    12, 20, 28, 4,  12, 20, 28, 4,  12, 20, 28, 4,  12, 20, 28, 4,  12, 20, 28,
    4,  12, 20, 28, 4,  12, 20, 28, 4,  12, 20, 28, 3,  12, 20, 28, 3,  12, 20,
    29, 3,  12, 20, 29, 3,  12, 20, 29, 3,  11, 20, 29, 2,  11, 20, 30, 2,  11,
    21, 30, 2,  11, 21, 31, 1,  11, 21, 31, 0,  11, 21, 32};

const std::vector<int> OS0_offset_1024 = {
    0,  21, 42, 62, 1,  22, 42, 61, 2,  22, 41, 60, 3,  22, 41, 60, 4,  23, 41,
    59, 5,  23, 41, 58, 5,  23, 40, 58, 6,  23, 40, 57, 6,  23, 40, 57, 7,  23,
    40, 57, 7,  23, 40, 56, 7,  24, 40, 56, 7,  24, 40, 56, 8,  24, 40, 56, 8,
    24, 40, 56, 8,  24, 40, 56, 8,  24, 40, 56, 8,  24, 40, 56, 8,  24, 40, 56,
    7,  24, 40, 56, 7,  24, 40, 56, 7,  24, 40, 56, 7,  23, 40, 57, 7,  23, 40,
    57, 6,  23, 40, 58, 6,  23, 40, 58, 5,  23, 41, 59, 5,  23, 41, 59, 4,  22,
    41, 60, 3,  22, 41, 61, 2,  22, 42, 62, 1,  21, 42, 63};

const std::vector<int> OS0_offset_2048 = {
    0,  43, 84, 125, 3,  43, 83, 123, 5,  44, 83, 121, 7,  45, 82, 119,
    8,  45, 82, 118, 9,  46, 81, 116, 11, 46, 81, 115, 12, 46, 81, 115,
    13, 47, 80, 114, 13, 47, 80, 113, 14, 47, 80, 113, 14, 47, 80, 112,
    15, 47, 80, 112, 15, 47, 79, 112, 15, 47, 79, 111, 15, 47, 79, 111,
    15, 47, 79, 111, 15, 47, 79, 112, 15, 47, 80, 112, 15, 47, 80, 112,
    15, 47, 80, 112, 14, 47, 80, 113, 14, 47, 80, 114, 13, 47, 80, 114,
    12, 46, 81, 115, 11, 46, 81, 116, 10, 46, 81, 117, 9,  45, 82, 119,
    8,  45, 82, 120, 6,  44, 83, 122, 4,  43, 84, 124, 2,  43, 84, 127};

std::vector<int> get_px_offset(int lidar_mode, const std::string& prod_line) {
    auto repeat = [](int n, const std::vector<int>& v) {
        std::vector<int> res{};
        for (int i = 0; i < n; i++) res.insert(res.end(), v.begin(), v.end());
        return res;
    };

    switch (lidar_mode) {
        case 512:
            // if      (prod_line == "OS-0-128") return repeat(32, {0, 8, 16, 24});
            if      (prod_line == "OS-0-128") return OS0_offset_512;
            else if (prod_line == "OS-1-128") return repeat(32, {0, 4, 8, 12});
            else if (prod_line == "OS-2-128") return repeat(32, {0, 2, 4, 6});
            else return repeat(32, {0, 3, 6, 9}); // default for gen1
        case 1024:
            // if      (prod_line == "OS-0-128") return repeat(32, {0, 16, 32, 48});
            if      (prod_line == "OS-0-128") return OS0_offset_1024;
            else if (prod_line == "OS-1-128") return repeat(32, {0, 8, 16, 24});
            else if (prod_line == "OS-2-128") return repeat(32, {0, 4, 8, 12});
            else return repeat(32, {0, 6, 12, 18}); // default for gen1
        case 2048:
            // if      (prod_line == "OS-0-128") return repeat(32, {0, 32, 64, 96});
            if      (prod_line == "OS-0-128") return OS0_offset_2048;
            else if (prod_line == "OS-1-128") return repeat(32, {0, 16, 32, 48});
            else if (prod_line == "OS-2-128") return repeat(32, {0, 8, 16, 24});
            else return repeat(32, {0, 12, 24, 36}); // default for gen1
        default:
            return std::vector<int>{128, 0};
    }
}
}  // namespace OS1
}  // namespace ouster
