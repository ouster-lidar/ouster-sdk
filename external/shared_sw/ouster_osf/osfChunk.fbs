include "osfCommon.fbs";

namespace ouster.OSF;

table scan_channel {
    buffer:[uint8];
}

table lidar_scan {
    scan:[scan_channel];
    ts:[uint64];
}

struct pose_f {
    R_w:float;
    R_x:float;
    R_y:float;
    R_z:float;
    T_x:double;
    T_y:double;
    T_z:double;
}

struct vec3 {
    x:double;
    y:double;
    z:double;
}

table trajectory {
    poses:[pose_f];
}

table gps_waypoint {
    latitude:double;
    /// Latitude position uncertainty, meters
    epy:double;
    longitude:double;
    /// Longitude position uncertainty, meters
    epx:double;
    altitude:double;
    /// Vertical position uncertainty, meters
    epv:double;
    /// Expected time uncertainty
    ept:double;
    speed:double;
    /// Speed over ground, meters/sec
    eps:double;
    track: double;
    ///  Course made good (relative to true north)
    epd: double;
    climb:double;
    /// Vertical speed uncertainty
    epc:double;
}

table imu {
    angular_vel:vec3;
    linear_accel:vec3;
    ts:[uint64];
}

table MessageExtension {
    buffer:[uint8];
    type:uint32;
}

// NOTE: union should contain only table to be compatible with
// Python language generator
union Message { lidar_scan, trajectory, gps_waypoint, imu, MessageExtension}

table StampedMessage {
    ts:uint64 (key);
    id:uint8;  // metadata.id, describes the device streams
    message:Message;
}

table osfChunk {
    start_ts:uint64;
    end_ts:uint64;
    frames:[StampedMessage];
}

file_identifier "OSF!";
file_extension "osfc";
root_type osfChunk;
