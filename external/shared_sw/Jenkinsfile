#!/usr/bin/env groovy

pipeline {

    agent any
    environment {
        MAKEFLAGS  = sh(script: 'echo -j$(nproc) -l$(nproc)', returnStdout: true).trim()
    }

    stages {
        stage('Prep') {
            steps {
                sh 'export'
            }
        }
        
        stage('Build') {
            parallel {
                stage('Build Windows Client') {
                    agent {label 'windows'}
                    steps {
                        powershell script: '''
                            # Make sure we error out on errors
                            $ErrorActionPreference = "Stop"
                            Set-PSDebug -Trace 1

                            # These string replaces are needed as jenkins for some
                            # reason likes to mess up the path variable
                            $env:PATH = $env:PATH -replace ";;",";"
                            $env:PATH = $env:PATH -replace '"',''

                            # The build executes from root as that is how linux is set up
                            ./sensor_utils/Docker/Windows10/make_vs_project.bat
                            ./sensor_utils/Docker/Windows10/build.bat
                        

                            if($LASTEXITCODE -ne 0) {
                                throw "Build Failed"
                            }
                        '''
                    } 
                }
                stage('Build Linux Client') {
                    steps {
                        sh './docker_build_shared_sw.sh'
                    } 
                }
            }
        }
        
        stage('Test') {
            parallel {
                stage('Test Windows Client') {
                    agent {label 'windows'}
                    steps {
                        withCredentials([file(credentialsId: 'ouster-build-gcs', variable: 'AUTH_FILE')]) {
                            powershell script: "gcloud auth activate-service-account --key-file=$AUTH_FILE;./sensor_utils/Docker/Windows10/test.bat;if(\$LASTEXITCODE -ne 0) {throw 'Build Failed'}"
                        }
                    }
                }
                
                stage('Test Linux Client') {
                    steps {
                        withCredentials([file(credentialsId: 'ouster-build-gcs', variable: 'AUTH_FILE')]) {
                        sh script: '''
                        gcloud auth activate-service-account --key-file=${AUTH_FILE}
                        ./docker_test_shared_sw.sh
                            
                    '''
                        }
                    } 
                }
            }
        }
    } // stages
}
