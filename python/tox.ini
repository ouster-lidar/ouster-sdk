[tox]
envlist = py{37,38,39,310,311}
isolated_build = true
skip_missing_interpreters = true
passenv = CCACHE_DIR, OUSTER_SDK_CMAKE_ARGS
parallel_show_output = true

[testenv]
extras = test
allowlist_externals = mkdir
passenv = ARTIFACT_DIR, ID, VERSION_ID
setenv =
    ARTIFACT_DIR = {env:ARTIFACT_DIR:./artifacts}
    ID = {env:ID:none}
    VERSION_ID = {env:VERSION_ID:none}
commands =
    pytest tests/ -o junit_suite_name="ouster-sdk-{env:ID}-{env:VERSION_ID}-{envname}" \
           --junit-prefix="{env:ID}__{env:VERSION_ID}__{envname}" \
           --junitxml="{env:ARTIFACT_DIR}/tox-tests/ouster-sdk-{env:ID}-{env:VERSION_ID}-{envname}.xml"

[testenv:py{37,38,39,310,311}-use_wheels]
description = installs ouster-sdk-python from wheels and runs tests
passenv = WHEELS_DIR, PIP_CACHE_DIR_BASE
skipsdist = true
skip_install = true
parallel_show_output = true
commands =
    pip install --cache-dir={env:PIP_CACHE_DIR_BASE}/{envname} --force-reinstall --upgrade --pre -f {env:WHEELS_DIR} --no-index --no-cache-dir ouster-sdk[test]
    pytest tests/ -o junit_suite_name="ouster-sdk-{env:ID}-{env:VERSION_ID}-{envname}" \
           -o cache_dir="{env:PIP_CACHE_DIR_BASE}/{envname}" \
           --junit-prefix="{env:ID}__{env:VERSION_ID}__{envname}" \
           --junitxml="{env:ARTIFACT_DIR}/tox-tests/ouster-sdk-{env:ID}-{env:VERSION_ID}-{envname}.xml"

[testenv:docs]
description = generating Ouster SDK documentaion html page (sphinx based)
extras = docs
commands =
    sphinx-build --color -b html -d "{toxworkdir}/docs_doctree" "{toxinidir}/../docs" "{env:ARTIFACT_DIR}/docs" {posargs}

[testenv:flake]
description = checking style with flake8
skip_install = true
deps =
    flake8
    flake8_formatter_junit_xml
commands =
    mkdir -p {env:ARTIFACT_DIR}/lint
    flake8 --format=junit-xml --output-file={env:ARTIFACT_DIR}/lint/flake.xml ./src ./tests

[testenv:mypy]
description = check types with mypy
passenv = PIP_EXTRA_INDEX_URL
setenv =
    PIP_EXTRA_INDEX_URL = {env:PIP_EXTRA_INDEX_URL:none}
deps = mypy

commands =
    mypy --junit-xml {env:ARTIFACT_DIR}/lint/mypy.xml ./src ./tests

[flake8]
max-line-length = 120
per-file-ignores =
    tests/*: D
    docs/*: D
ignore =
    # E125, E126, E128 continuation line indentation, yapf doesn't fix this
    E125,
    E126,
    E128,
    # E251 newlines around equals in keywords, yapf again
    E251,
    # E731 assigning a lambda expression
    E731,
    # W503 line break before binary operator, yapf again
    W503,
    # W504 line break before binary operator, yapf again
    W504,
    # E741 "l" and "I" as variables names; not a problem with some static analysis
    E741

[pydocstyle]
# used by flake8-docstrings plugin in flake env
convention = google
